from Individual import Individual
#from FitnessCalc import FitnessCalc
import math

class Population():

    starname = 'TauBoo'
    starperiod = '3.3124'
#    starname = 'hd4308'
#    starperiod = '15.56'
#    starname = '51peg'
#    starperiod = '4.230785'
#    starname = 'HD83443'
#    starperiod = '2.985698'
#    starname = 'HD284968'
#    starperiod = '8.7836'
#    starname = 'HD195019'
#    starperiod = '18.201'

    def star_HD195019(self):
# Xvalues      star = HD195019b
        self.dataX = [0, 2.008611, 21.970278, 22.994873, 40.961667, 70.891099, 70.914896, \
                      70.937222, 71.83603, 71.858287, 71.880683, 72.907951, 72.930683, \
                      72.952836, 73.851794, 73.874768, 73.89743, 74.89206, 74.913032, \
                      74.932951, 76.778032, 76.800382, 76.823368, 77.788831, 77.807581, \
                      96.832882, 96.855417, 128.763912, 295.131574, 348.070544, 358.056053, \
                      359.073299, 360.071192, 372.971238, 372.992697, 375.001562, 375.023935, \
                      382.013264, 382.036111, 383.077164, 384.013727, 384.035972, 387.033333, \
                      387.056018, 397.91706, 397.939363, 411.867789, 412.902222, 413.857245, \
                      413.881632, 414.794988, 414.817234, 434.765752, 434.788113, 440.837349, \
                      441.798461, 442.767199, 443.841204, 448.801042, 448.820752, 449.787847, \
                      449.810347, 462.7914, 462.813657, 463.757072, 463.779005, 491.7314, \
                      491.754329, 674.054954, 695.060555, 695.082801, 745.953183, 746.977384, \
                      769.916609, 770.949942, 797.852847, 797.875012, 798.850833, 798.873241, \
                      807.826802, 807.848949, 811.789468, 811.818854, 818.77081, 818.800289, \
                      820.757986, 820.78713, 829.740081, 829.769398, 836.757685, 836.787118, \
                      1069.038277, 1069.068345, 1069.096542, 1071.07873, 1072.051434, 1110.016875, \
                      1110.046308, 1116.932396, 1117.977974, 1122.977766, 1123.008194, 1131.927697, \
                      1131.957512, 1152.848125, 1154.841771, 1155.895718, 1168.815544, 1168.84544, \
                      1175.79391, 1175.822858, 1178.795972, 1178.843623, 1444.099826, 1511.917141, \
                      1511.939745, 1511.962303]
#  Yvalues      star = hd195019b
        self.dataY = [242, 97, -49, -99, \
                      -67, 253, 267, 264, 289, 268, \
                      293, 217, 222, 195, 213, 212, \
                      190, 127, 96, 100, -25, -33, \
                      -69, -135, -109, -176, -194, 199, \
                      -51.9, 104, -49.1, 32.3, 136.8, -248, \
                      -263, -133, -127, 272, 264, 210, \
                      183, 178, -89, -92, 231, 237, \
                      -115.9, -13.7, 115, 87, 151, 169, \
                      261, 242, -41.4, -136, -210.9, -262.8, \
                      -84, -26, 24, 58, -268, -257, \
                      -261, -243, 230, 226, 213.8, 6, \
                      -11, 249, 205.1, -159.6, -233.5, 220, \
                      232, 250, 278, -253, -233, -128, \
                      -125, 260, 256, 159.5, 164, -154, \
                      -182, 300, 283, 50, 42, 95, \
                      206.1, 231.9, 270, 257, -227.2, -265.7, \
                      16, 46, 51, 10, -203.4, -259, \
                      -246.3, -25, -20, -140, -139, 136, \
                      89, -227.1, 202, 207, 182]


    def star_hd4308(self):
# Xvalues      star = hd4308b
        self.dataX = [0, 0.990558, 3.0165, 3.99956, 5.006756, 6.027873, 32.912893, \
                      34.943398, 36.942106, 273.208007, 277.164706, 278.208274, 279.163962, \
                      280.20039, 281.19853, 282.208481, 343.032293, 344.058, 345.049093, \
                      346.02164, 347.009896, 348.051362, 349.068996, 351.090313, 353.022602, \
                      371.926708, 373.005438, 373.934791, 374.933486, 375.948144, 446.821622, \
                      447.822796, 448.829736, 449.827375, 453.806768, 454.800974, 455.815892, \
                      460.834832, 461.804359, 462.812048, 463.808086, 464.810547, 465.804867, \
                      466.817301, 468.807459, 469.811276, 470.828447, 471.825197, 472.857963, \
                      475.811996, 480.798691, 484.780129, 488.787938, 489.798738, 588.207913, \
                      590.126773, 591.201807, 592.185066, 669.037396, 670.134762, 671.144435, \
                      673.186304, 704.013934, 706.121556, 707.019058, 708.065272, 710.060853, \
                      759.958168, 763.892645, 764.826188, 765.885066, 766.87772]
# Yvalues      star = hd4308b
        self.dataY = [-0.3, -0.6, 2.8, 0.6, 4.5, 3.6, -9, \
                      -0.7, 1.1, 5.9, -0.1, 2.6, -1.3, \
                      -3.8, -4.6, -5.5, -1.1, 0, 0.2, \
                      -2.4, -2.5, -0.2, -2.6, -1.5, -0.1, \
                      8.5, 4.6, 0.4, -2.3, -0.4, 3.1, \
                      4.1, 0.3, -0.4, -8.9, -6.7, -2.4, \
                      1.7, 2.6, 3.7, 0.5, 1.1, -0.1, \
                      -0.2, -2.3, 0.5, -1.5, 3.1, 6.6, \
                      7.5, 5, -4.6, 1.6, 4.5, 0.4, \
                      -3.1, -2.6, -3.6, 3, 7.8, -3.7, \
                      -8.4, -0.3, -1.5, 5.5, 2.7, 0.6, \
                      0.2, -2, -4.9, -6.9, -5.8]



    def star_TauBoo(self):
#  xvalues  star = TauBoo
        self.dataX = [0, 236.2514, 236.2566, 236.2619, 265.1271, 265.1318, \
                      265.1373, 266.0712, 266.076, 372.9607, 372.9761, 372.9924, \
                      393.9539, 393.9686, 393.9829, 415.9111, 415.9144, 433.9029, \
                      619.1482, 749.981, 960.2441, 1060.0657, 1418.0203, 1478.9666, \
                      1712.2125, 1765.0523, 1765.0695, 1787.0025, 1787.0596, 1820.9484, \
                      1821.9555, 1821.9779, 2109.1625, 2109.1841, 2138.1137, 2138.1351, \
                      2390.3088, 2453.2048, 2522.9569, 2808.2364, 2898.9251, 2898.9479, \
                      3110.262438, 3110.284938, 3113.264139, 3114.291859, 3215.119174, 3215.144568, \
                      3245.022785, 3245.045494, 3256.024035, 3256.046246, 3256.9176, 3256.940343, \
                      3272.982855, 3273.892866, 3274.113653, 3274.933433, 3275.057797, 3275.882588, \
                      3276.042866, 3276.93275, 3277.040864, 3304.886385, 3340.888156, 3544.20451, \
                      3545.173665, 3546.009244, 3546.021257, 3546.255285, 3579.117114, 3604.985193, \
                      3654.959591, 3655.973653, 3686.920204, 3696.906616, 3835.279776, 4018.934081, \
                      4018.946639, 4046.922612, 4248.23076, 4345.036825, 4345.975112, 4346.975112, \
                      4578.291674, 4582.257311, 4669.057218, 4670.065297, 4981.225632, 4981.251651, \
                      5083.048619, 5083.056142, 5097.039544, 5375.189301, 5376.180586, 5380.174, \
                      5422.006107, 5422.025112]
# yvalues   star = TauBoo
        self.dataY = [61.2, 38.5, 40.7, 37.6, 37.2, 37.2, 38.7, \
                      40.7, 38.6, -33.1, -27.6, -34.5, 14.5, \
                      15.2, 15, -20.2, -18, 29.9, 11.2, \
                      18, 3.5, 57.4, 59.7, 9, -4.1, \
                      3.3, 3.4, 12.2, 0.2, -26.4, 38.7, \
                      38.8, -46.4, -43.2, -0.3, -0.5, -32.3, \
                      -28.4, -34.9, -35, 46.3, 48.1, 4.2, \
                      7.3, -20, 45.8, -43.5, -42.6, -44.6, \
                      -46.2, 11.3, 10.4, 41.3, 41.4, 36.3, \
                      21, 3.8, -49.6, -49.9, 7.3, 22.9, \
                      36.3, 32, -47.8, -38.6, 6.4, 39.9, \
                      -23.3, -23.1, -40.2, -19.4, 26.1, 10.2, \
                      -47.7, 27.9, 28.9, -28.2, 36.4, 32.2, \
                      -48.7, -26.5, -54.6, 15.2, 27.5, 39.3, \
                      20.1, -39.3, -31.5, -47, -42.2, -38.3, \
                      -37.3, -50.8, -51.6, 15, 34.6, -32.5, -31.4]


    def star_HD83443(self):
#  Xdata HD83443 	
        self.dataX = [0,0.982673, 1.989328, 2.984502, 73.860462, 74.84706, 75.706261, \
                      76.754062, 83.857372, 84.841144, 85.867881, 105.702094, 108.80576, \
                      109.714618, 164.664652, 166.642954, 321.033984, 338.040506, 345.053184, \
                      409.815155, 435.867381, 436.754779, 464.843946, 702.974444, 813.777384, \
                      1091.012233, 1471.990439, 1528.851088]
# ydata  HD83443 	
        self.dataY = [21.8, -55.3, 34.3, 19.2, 44.9, -6.7, -57.2,45.3, \
                      -8.9, -45.6,49.4,-41.5,-33.2,52.5,-34.1,58.7,-13.2,-48.4, \
                      -1.9, -54.4,23,-54.8,38.9,-35.9,9.4, -46.4,15.3, 6.4]


    
    def star_51peg(self):
        #51_peg
        self.dataX = [0,0.018645,0.134525,0.150266,0.289016,0.302592,0.945682,\
                      0.961203,0.977268,1.050891,1.066793,1.081793,1.221168,\
                      1.23662,1.251388,1.936013,1.953842,2.119629,2.241558,\
                      2.938952,3.252071,3.265844,8.96559,8.990624,9.160879,\
                      9.183194,9.959155,9.981712,10.191805,10.214618,10.946967,\
                      10.96993,11.157326,11.176655,11.966712,11.988553,12.04581,\
                      12.068819,12.138368,12.161122,12.230405,12.253865,12.948217,\
                      12.97052,13.06853,13.091574,13.187673,13.211226,13.934444,\
                      13.964699,14.084826,14.106805,14.170705,14.194641,15.057442,\
                      15.081145,15.171446,15.192986,15.93728,15.958472,16.088958,\
                      16.112326,16.180277,16.202592,16.945937,16.968043,17.057789,\
                      17.078981,17.172349,17.194444,17.936492,17.959236,18.063645,\
                      18.087291,18.176608,18.198657,18.939027,18.96133,18.984108,\
                      19.00699,19.032777,19.056261,19.078935,20.922569,20.94471,\
                      20.96728,20.99008,21.012812,21.035347,21.060138,21.964594,\
                      21.982488,22.052222,22.067465,22.143645,22.158842,22.94331,\
                      22.966643,23.038391,23.060786,23.084027,23.106481,23.935856,\
                      23.956805,23.978993,24.001793,24.024872,24.048564,24.070856,\
                      24.970694,24.992638,25.017534,25.035104,25.062546,25.084131,\
                      25.106388,25.928981,25.952199,25.978148,26.000601,26.023553,\
                      26.046134,26.068692,26.091319,26.114224,26.93118,26.953483,\
                      27.023055,27.045671,27.068344,27.091759,27.925462,27.94574,\
                      27.96956,27.995277,28.016955,28.041886,28.062187,28.085416,\
                      28.156631,28.17956,28.984108,29.006828,29.029155,29.051423,\
                      29.07427,29.096666,29.925208,29.947847,29.970312,29.993078]
        self.dataY = [-52.9,-45.8,-60.8,-53.3,-60.9,-57.3,\
                      -24.2,-30.5,-26,-19.2,-23.5,-21.2,-13.5,\
                      -14.7,-11.9,39.7,38,48.8,53.2,36.6,\
                      8.7, 8.2,-55.7,-56.4,-45.6,-50.6,21.7,20.3,\
                      29.5,26,52.3,57.3,54.3,33,-8.8,-9.5,\
                      -7.7,-15.6,-24.4,-15.8,-37.6,-27,-52.5,\
                      -61.1,-54.7,-52.7,-65.8,-53.8,10.8,\
                      -5.8,4.9,3.2,9.2,13.1,58,55.4,55.1,52.3,14.3,\
                      15.1,2.5,-2.3,-27,6.1,-47.6,-53.1,-56.8,-73.1,\
                      -62.2,-69.9,-25.3,-22.4,-14.8,-11.2,-6,4.9,\
                      37.3,60.2,58.6,46.2,48.9,69,29,-39.2,\
                      -38.2,-42.7,-48.1,-39.9,-40.1,-48.8,\
                      -41.3,-46,-40.6,-36,-31.1,-30.7,38.2,33.8,39,\
                      48.3,36.3,53.7,60,55.2,63.9,48,60.2,\
                      57.7,47.6,-32.4,-25.5,-31.9,-29,-33.9,\
                      -37.5,-38.6,-47.7,-55.8,-43.1,-44.6,\
                      -49.9,-46.3,-47.3,-45.1,-41.3,12.4,\
                      15.7,24.6,29.8,34.7,28.9,67.1,\
                      39.9,42.4,54,51.4,57,39,54.1,42.8,40,-7.4,\
                      -7.8,-7.8,-7.4,-12.9,-13.2,-45.9,\
                      -50.4,-65.7,-51.2]

    def star_HD284968(self):
# star = hd284968b	period = 8.7836
        self.dataX = [0, 211.323, 233.349, 331.141, 389.02, 571.369, 711.107, \
                      742.094, 1043.236, 1061.235, 1396.082, 1468.05, 1495.011, \
                      1676.373, 1696.321, 1734.183, 1735.279, 2058.364, 2462.33, \
                      2559.134, 2885.197, 3001.983, 3142.297, 3244.286, 3299.135, \
                      3557.123, 3558.171, 3559.213, 3560.227, 3590.255, 3615.159, \
                      3616.157, 3621.071, 3622.132, 3625.131, 3651.078, 3652.093, \
                      3705.024, 3705.031, 3706.001, 3706.01]
        self.dataY = [-8.45, -14.26, -11.15, -3.02, -9.8, -16.45, \
                      -16.55, 7.14, -5.92, -10.07, -2.7, -6.69, \
                      -0.62, 1.92, -11.89, 3.21, 4.4, 5.05, \
                      1.92, 4.79, 4.43, -1.47, -15.5, 1.24, \
                      -6.06, 3.72, 4.6, 10.72, 11.2, 0, \
                      0.25, 2.05, 10.51, 5.32, -1.92, -4.3, \
                      1.16, -2.33, -0.41, 3.41, 0.37]



    def __init__(self, population_size, initialise):
        self.individuals = []
        
        #Creates the individuals
        if (initialise):
            for i in range(population_size):
                new_individual = Individual()
                self.individuals.append(new_individual)
  
    def get_fitness(self, individual_passed):
        fitness = 0
        sumdiff=0

        self.star_TauBoo()
#        self.star_hd4308()
#        self.star_51peg()
#        self.star_HD83443()
#        self.star_HD284968()
#        self.star_HD195019()


        self.A = 0
        for i in range(Individual.DefaultGeneLength-29,0,-1):
            j = Individual.DefaultGeneLength-i-29
            self.A = self.A + individual_passed.genes[i]*(2**j)
        self.A = self.A*100/(2**14-1)
        self.A = round(self.A,2)

        self.B = 0
        for i in range(Individual.DefaultGeneLength-15,14,-1):
            j = Individual.DefaultGeneLength-i-15
            self.B = self.B + individual_passed.genes[i]*(2**j)
        self.B = self.B*100/(2**14-1)
        self.B = round(self.B,2)
        if self.B == 0:
            self.B = 0.000001

        self.C = 0
        for i in range(Individual.DefaultGeneLength-1,28,-1):
            j = Individual.DefaultGeneLength-i-1
            self.C = self.C + individual_passed.genes[i]*(2**j)
        self.C = self.C*100/(2**14-1)
        self.C = round(self.C,2)

        for i in range(len(self.dataX)):
            sumdiff = sumdiff + (self.dataY[i]-self.A*math.sin(2*math.pi*self.dataX[i]/self.B+self.C))**2
        fitness = math.sqrt(sumdiff)
        
        return fitness

    def fitness_of_the_fittest(self):
        fitness_of_the_fittest = self.get_fitness(self.get_fittest())
        return fitness_of_the_fittest

    def get_fittest(self):
        fittest = self.individuals[0]
        for i in range(len(self.individuals)):
            #switched from lessthan or equal to greater than or equal to
            if self.get_fitness(fittest) >= self.get_fitness(self.individuals[i]) :
                fittest = self.individuals[i]
        return fittest

    def size(self):
        return len(self.individuals)
    
    def get_individual(self, index):
        return self.individuals[index]
        
    def save_individual(self, index, individual_passed):
        self.individuals[index] = individual_passed
